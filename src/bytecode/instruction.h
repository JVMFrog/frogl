#pragma once

#define FVM_INSTRUCTION(name, index) constexpr frogl::byte name = index

namespace frogl {

    namespace{
        typedef unsigned char byte;
    }

    FVM_INSTRUCTION(PUSH_8, 0);
    FVM_INSTRUCTION(PUSH_16, PUSH_8 + 1);
    FVM_INSTRUCTION(PUSH_32, PUSH_16 + 1);
    FVM_INSTRUCTION(DOUBLE_32, PUSH_32 + 1);

    FVM_INSTRUCTION(RLOAD_8, DOUBLE_32 + 1);
    FVM_INSTRUCTION(RLOAD_16, RLOAD_8 + 1);
    FVM_INSTRUCTION(RLOAD_32, RLOAD_16 + 1);

    FVM_INSTRUCTION(FRAME, RLOAD_32+ 1);
    FVM_INSTRUCTION(LOAD_FRAME, FRAME + 1);
    FVM_INSTRUCTION(LOAD_32, LOAD_FRAME + 1);
    FVM_INSTRUCTION(STORY_32, LOAD_32 + 1);
    FVM_INSTRUCTION(RETURN_32, STORY_32 + 1);

    FVM_INSTRUCTION(PLUS_I32, RETURN_32 + 1);
    FVM_INSTRUCTION(MINUS_I32, PLUS_I32 + 1);
    FVM_INSTRUCTION(MUL_I32, MINUS_I32 + 1);
    FVM_INSTRUCTION(DIV_I32, MUL_I32 + 1);
    FVM_INSTRUCTION(PLUS_F32, DIV_I32 + 1);
    FVM_INSTRUCTION(MINUS_F32, PLUS_F32 + 1);
    FVM_INSTRUCTION(MUL_F32, MINUS_F32 + 1);
    FVM_INSTRUCTION(DIV_F32, MUL_F32 + 1);

    FVM_INSTRUCTION(PRINT, DIV_F32 + 1);
    FVM_INSTRUCTION(PRINT_I32, PRINT + 1);
    FVM_INSTRUCTION(PRINT_F32, PRINT_I32 + 1);

    FVM_INSTRUCTION(INVERT, PRINT_F32 + 1);
    FVM_INSTRUCTION(PUSH_FLAG, INVERT + 1);
    FVM_INSTRUCTION(CLESS_I32, PUSH_FLAG + 1);

    FVM_INSTRUCTION(GOTOIF, CLESS_I32 + 1);

    namespace registers {
        FVM_INSTRUCTION(A, 0x0);
        FVM_INSTRUCTION(B, 0x1);
        FVM_INSTRUCTION(C, 0x2);
        FVM_INSTRUCTION(D, 0x3);
    }
}
